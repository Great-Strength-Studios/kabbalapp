commands: null
domain:
  entities: {}
  factories: {}
  modules:
    cli:
      aliases: null
      components:
      - class_name: CliArgument
        name: App CLI Argument
        properties:
          action:
            description: argument action
            name: Action
            required: false
            type: str
          default:
            description: default argument value
            name: default
            type: str
          help:
            description: app argument help
            name: Help
            required: true
            type: str
          key:
            name: Key
            required: true
            type: str
          nargs:
            description: number of arguments
            name: Number of arguments
            required: false
            type: str
          type:
            choices:
            - str
            - int
            - float
            description: app arggument type
            name: Type
            type: str
        type: value_object
      - class_name: CliCommand
        name: App CLI Command
        properties:
          arguments:
            description: app command arguments list
            inner_type: CliArgument
            name: Arguments
            required: false
            type: list
          command_key:
            description: app command model key
            name: Command key
            required: true
            type: str
          help:
            description: app subcommand help
            name: Help
            required: true
            type: str
          name:
            description: app subcommand name
            name: Name
            required: true
            type: str
          subcommand_key:
            description: app sub-command key
            name: Sub-command key
            required: false
            type: str
      - class_name: CliInterface
        factory_method:
          method_name: create
        name: App CLI Interface
        properties:
          type:
            choices:
            - cli
            - rest_flask
            description: interface type
            name: type
            required: true
            type: str
      dependencies:
      - i
      name: cli
    domain:
      aliases:
      - adom
      - d
      models:
        domain:
          class_name: AppDomain
          name: App Domain
          properties:
            key:
              description: domain key
              name: Key
              required: true
              type: str
            name:
              description: domain name
              name: Name
              required: true
              type: str
        domain_implementation:
          class_name: AppDomainImplementation
          name: App Domain Implementation
          properties:
            key:
              description: domain implementation key
              name: Key
              required: true
              type: str
            name:
              description: domain implementation name
              name: Name
              required: true
              type: str
        domain_model:
          class_name: AppDomainModel
          name: App Domain Model
          properties:
            class_name:
              description: domain model class name
              name: Class name
              required: true
              type: str
            key:
              description: domain model key
              name: Key
              required: true
              type: str
            name:
              description: domain model name
              name: Name
              required: true
              type: str
        domain_role:
          class_name: AppDomainRole
          name: App Domain Role
          properties:
            type:
              choices:
              - blacklist
              - whitelist
              description: domain role type
              name: Type
              required: true
              type: str
      name: Domain
    interface:
      aliases:
      - i
      components:
      - class_name: AppInterface
        name: App Interface
        properties:
          mappers:
            description: interface mapper functions
            inner_type: str
            key_type: str
            name: mappers
            type: dict
          type:
            choices:
            - cli
            - rest_flask
            description: interface type
            name: type
            required: true
            type: str
        type: entity
      name: App Interface
    project:
      aliases:
      - proj
      - p
      models:
        app_project:
          class_name: AppProject
          name: App Project
      name: App Project
  repos: {}
  value_objects:
    model_property:
      class_name: DomainModelProperty
      name: Model Property
      properties: []
    type_properties:
      class_name: TypeProperties
      name: Type Properties
      properties: []
errors:
  APP_KEY_REQUIRED:
    error_code: '000000003'
    message:
      en_US: App key is required
  APP_PROJECT_NOT_FOUND:
    error_code: '000010001'
    message:
      en_US: App Project with key "{}" not found
  CLI_ARGUMENT_ALREADY_EXISTS:
    error_code: '000000006'
    message:
      en_US: A CLI argument with one of the following keys "{}" already exists
  CLI_COMMAND_ALREADY_EXISTS:
    error_code: '000000005'
    message:
      en_US: CLI command with key "{}" already exists
  CLI_COMMAND_NOT_FOUND:
    error_code: '000000003'
    message:
      en_US: CLI command with key "{}" not found
  DOMAIN_IMPLEMENTATION_ALREADY_EXISTS:
    error_code: '000020006'
    message:
      en_US: Domain implementation with key "{}" already exists
  DOMAIN_IMPLEMENTATION_NOT_FOUND:
    error_code: '000020007'
    message:
      en_US: Domain implementation with key "{}" not found
  DOMAIN_MODEL_NOT_FOUND:
    error_code: '000020002'
    message:
      en_US: Domain model with id "{}" not found
  DOMAIN_MODEL_PROPERTY_ALREADY_EXISTS:
    error_code: '000020003'
    message:
      en_US: Domain model property with name "{}" already exists
  DOMAIN_NOT_FOUND:
    error_code: '000020005'
    message:
      en_US: Domain with key "{}" not found
  DOMAIN_ROLE_ALREADY_EXISTS:
    error_code: '000020006'
    message:
      en_US: Domain role with key "{}" already exists
  ENDPOINT_NOT_FOUND:
    error_code: '000000002'
    message:
      en_US: 'Unable to find the requested endpoint. Subdomain: {}, Module: {}'
    status_code: 404
  INTERFACE_ALREADY_EXISTS:
    error_code: '000010002'
    message:
      en_US: Interface with type "{}" already exists
  INTERFACE_TYPE_NOT_FOUND:
    error_code: '000010003'
    message:
      en_US: Interface with type "{}" not found
  INVALID_REQUEST_DATA:
    error_code: '000000001'
    message:
      en_US: 'Invalid request contains the following errors: {}'
  INVALID_TYPE_PROPERTY:
    error_code: '000020007'
    message:
      en_US: Model property with type "{}" contains invalid type property "{}"
  DOMAIN_MODEL_ALREADY_EXISTS:
    error_code: '000020001'
    message:
      en_US: Domain model of type "{}" with class name "{}" already exists
features:
  groups:
    app_project:
      features:
        add_project:
          functions:
          - data_mapping: new_app_project
            function_path: app_project.new_app_project
          header_mapping: app_project_headers
        set_default:
          functions:
          - data_mapping: set_default_app_project
            function_path: app_project.set_default_app_project
          header_mapping: app_project_headers
    cli:
      features:
        add_argument:
          functions:
          - data_mapping: add_cli_argument
            function_path: cli.add_argument
        add_command:
          functions:
          - data_mapping: add_cli_command
            function_path: cli.add_command
        add_parent_argument:
          functions:
          - data_mapping: add_cli_parent_argument
            function_path: cli.add_parent_argument
    domain:
      features:
        add_implementation:
          functions:
          - data_mapping: add_domain_implementation
            function_path: domain.add_implementation
        add_model:
          functions:
          - data_mapping: add_domain_model
            function_path: domain.add_domain_model
        add_model_property:
          functions:
          - data_mapping: add_domain_model_property
            function_path: domain.add_model_property
          - data_mapping: print_value_object_module
            function_path: app_printer.print_value_object_module
        add_role:
          functions:
          - data_mapping: add_domain_role
            function_path: domain.add_role
        sync_implementation:
          functions:
          - data_mapping: sync_domain_implementation
            function_path: domain.sync_implementation
    interface:
      features:
        add:
          functions:
          - data_mapping: add_interface
            function_path: interface.add_interface
interfaces:
  commands: null
  types:
    cli:
      commands:
        app_project:
          subcommands:
            add_project:
              arguments:
              - help: App project directory path
                name_or_flags:
                - --app-directory
                required: true
                type: str
              - help: App project key
                name_or_flags:
                - --key
                required: true
                type: str
              - help: App project name
                name_or_flags:
                - --name
                required: true
                type: str
              help: Adds Kabbalapp project
              name: Add Project
        cli:
          subcommands:
            add_argument:
              arguments:
              - help: argument action
                name_or_flags:
                - --action
              - help: argument choices
                name_or_flags:
                - --choices
                nargs: +
              - help: command key
                name_or_flags:
                - -c
                - --command-key
                required: true
              - help: argument default
                name_or_flags:
                - --default
              - help: argument flags
                name_or_flags:
                - -f
                - --flags
                nargs: +
              - help: argument description
                name_or_flags:
                - -d
                - --description
                required: true
              - help: argument name
                name_or_flags:
                - name
              - help: available number of arguments
                name_or_flags:
                - --nargs
              - action: store_true
                help: argument is positional
                name_or_flags:
                - -p
                - --positional
              - action: store_true
                help: argument required
                name_or_flags:
                - --required
              - help: subcommand key
                name_or_flags:
                - -s
                - --subcommand-key
              - choices:
                - str
                - int
                - float
                help: argument type
                name_or_flags:
                - -t
                - --type
              name: Add CLI Argument
            add_command:
              arguments:
              - help: cli command key
                name_or_flags:
                - --command-key
                - -c
                required: true
              - help: cli subcommand key
                name_or_flags:
                - --subcommand-key
                - -s
              - help: cli command name
                name_or_flags:
                - name
              - help: cli command description
                name_or_flags:
                - --description
                - -d
              name: Add CLI Command
            add_parent_argument:
              arguments:
              - help: argument action
                name_or_flags:
                - --action
              - help: argument choices
                name_or_flags:
                - --choices
                nargs: +
              - help: argument default
                name_or_flags:
                - --default
              - help: argument flags
                name_or_flags:
                - -f
                - --flags
                nargs: +
              - help: argument description
                name_or_flags:
                - -d
                - --description
                required: true
              - help: argument name
                name_or_flags:
                - name
              - help: available number of arguments
                name_or_flags:
                - --nargs
              - action: store_true
                help: argument is positional
                name_or_flags:
                - -p
                - --positional
              - action: store_true
                help: argument required
                name_or_flags:
                - --required
              - choices:
                - str
                - int
                - float
                - bool
                - list
                - dict
                help: argument type
                name_or_flags:
                - --type
              name: Add CLI Parent Argument
        domain:
          subcommands:
            add_implementation:
              arguments:
              - help: domain key
                name_or_flags:
                - --domain-key
                - -d
                required: true
              - help: domain implementation key
                name_or_flags:
                - --key
                - -k
              - help: domain implementation name
                name_or_flags:
                - name
              name: Add Domain Implementation
            add_model:
              arguments:
              - help: domain model class name
                name_or_flags:
                - --class-name
                - -c
                required: true
              - choices:
                - entity
                - value_object
                help: domain model type
                name_or_flags:
                - --type
                - -t
                required: true
              - help: domain model name
                name_or_flags:
                - name
              name: Add Domain Model
            add_model_property:
              arguments:
              - help: domain model property choices
                name_or_flags:
                - --choices
                nargs: +
              - help: default domain model property value
                name_or_flags:
                - --default
              - help: domain model property description
                name_or_flags:
                - --description
              - help: domain model id
                name_or_flags:
                - --model-id
                required: true
              - help: domain model property name
                name_or_flags:
                - name
              - action: store_true
                help: require value for domain model property
                name_or_flags:
                - --required
              - choices:
                - str
                - int
                - float
                - bool
                - datetime
                - date
                - list
                - dict
                - model
                default: str
                help: domain model property type
                name_or_flags:
                - --type
                - -t
              - help: inner type for compound types (list, dict)
                name_or_flags:
                - --inner-type
              - help: domain model property type properties separated by '='
                name_or_flags:
                - --type-properties
                nargs: +
              name: Add Domain Model Property
            add_role:
              arguments:
              - help: domain key
                name_or_flags:
                - --domain-key
                - -d
                required: true
              - help: domain role name
                name_or_flags:
                - name
              - choices:
                - blacklist
                - whitelist
                help: domain role type
                name_or_flags:
                - --type
                - -t
                required: true
              name: Add Domain Role
            sync_implementation:
              arguments:
              - help: domain key
                name_or_flags:
                - --domain-key
                - -d
                required: true
              - help: domain implementation key
                name_or_flags:
                - --implementation-key
                - -i
                required: true
              name: Sync Domain Implementation
        interface:
          subcommands:
            add:
              arguments:
              - choices:
                - cli
                - rest_flask
                help: interface type
                name_or_flags:
                - --type
                - -t
                required: true
              name: Add App Interface
      parent_arguments:
      - help: app project key (not required when using default project)
        name_or_flags:
        - --app-key
      - choices:
        - dev
        - prod
        default: prod
        help: environment to run the command in
        name_or_flags:
        - --env
      - action: store_true
        help: force the command overwrite existing files when syncing
        name_or_flags:
        - --force
      - action: store_true
        help: run the command with verbose output
        name_or_flags:
        - --verbose
