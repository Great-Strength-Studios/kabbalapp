domains:
  app_printer:
    name: App Printer
    class_name: AppPrinter
  app_project:
    aliases:
    - aproj
    - p
    models:
      app_project:
        name: App Project
        class_name: AppProject
    name: App Project
  app_domain:
    aliases:
    - adom
    - d
    models:
      app_domain:
        name: App Domain
        class_name: AppDomain
      app_domain_model:
        name: App Domain Model
        class_name: AppDomainModel
    name: Domain
endpoints: 
  cli:
    parent_arguments:
    - name_or_flags:
      - --app-key
      help: app project key (not required when using default project)
    - name_or_flags:
      - --env
      choices:
      - dev
      - prod
      help: environment to run the command in
      default: prod
    - name_or_flags:
      - --verbose
      action: store_true
      help: run the command with verbose output
    - name_or_flags:
      - --force
      action: store_true
      help: force the command overwrite existing files when syncing
    commands:
      domain:
        subcommands:
          add:
            arguments:
            - name_or_flags:
              - name
              help: domain name
            - name_or_flags:
              - --key
              - -k
              help: domain key
            - name_or_flags:
              - --aliases
              - -a
              nargs: '+'
              help: domain aliases
          add-model:
            arguments:
            - name_or_flags:
              - name
              help: domain model name
            - name_or_flags:
              - --domain-key
              - -d
              help: domain key
              required: true
            - name_or_flags:
              - --key
              - -k
              help: domain model key
            - name_or_flags:
              - --class-name
              - -c
              help: domain model class name
          add-role:
            arguments:
            - name_or_flags:
              - name
              help: domain role name
            - name_or_flags:
              - --type
              - -t
              help: domain role type
              choices:
              - blacklist
              - whitelist
              required: true
            - name_or_flags:
              - --domain-key
              - -d
              help: domain key
              required: true
          add-model-property:
            arguments:
            - name_or_flags:
              - name
              help: domain model property name
            - name_or_flags:
              - -d
              - --domain-key
              help: domain key
              required: true
            - name_or_flags:
              - -m
              - --model-key
              help: domain model key
              required: true
            - name_or_flags:
              - -k
              - --key
              help: domain model property key
            - name_or_flags:
              - -t
              - --type
              help: domain model property type
              choices:
              - str
              - int
              - float
              - bool
              - datetime
              - date
              - time
              - list
              - dict
              - model
            - name_or_flags:
              - --required
              help: require value for domain model property
              action: store_true
            - name_or_flags:
              - --default
              help: default domain model property value
            - name_or_flags:
              - --choices
              help: available value choices for domain model property value
              nargs: +
            - name_or_flags:
              - --serialized_name
              help: the domain model property key when serialized
            - name_or_flags:
              - --deserialize_from
              help: the domain model property keys available to deserialize from
              nargs: +
errors:
  APP_KEY_REQUIRED:
    error_code: '000000003'
    error_name: APP_KEY_REQUIRED
    message:
      en_US: App key is required
  APP_PROJECT_NOT_FOUND:
    error_code: '000010001'
    error_name: APP_PROJECT_NOT_FOUND
    message:
      en_US: App Project with key "{}" not found
  DOMAIN_ALREADY_EXISTS:
    error_code: '00002001'
    error_name: DOMAIN_ALREADY_EXISTS
    message:
      en_US: Domain with key "{}" already exists
  DOMAIN_MODEL_ALREADY_EXISTS:
    error_code: '000020002'
    error_name: DOMAIN_MODEL_ALREADY_EXISTS
    message:
      en_US: Domain model with key "{}" already exists
  DOMAIN_ROLE_ALREADY_EXISTS:
    error_code: '000020003'
    error_name: DOMAIN_ROLE_ALREADY_EXISTS
    message:
      en_US: Domain role with key "{}" already exists
  DOMAIN_MODEL_PROPERTY_ALREADY_EXISTS:
    error_code: '000020004'
    error_name: DOMAIN_MODEL_PROPERTY_ALREADY_EXISTS
    message:
      en_US: Domain model property with key "{}" already exists
  DOMAIN_NOT_FOUND:
    error_code: '000020005'
    error_name: DOMAIN_NOT_FOUND
    message:
      en_US: Domain with key "{}" not found
  ENDPOINT_NOT_FOUND:
    error_code: '000000002'
    error_name: ENDPOINT_NOT_FOUND
    message:
      en_US: 'Unable to find the requested endpoint. Subdomain: {}, Module: {}'
    status_code: 404
  INVALID_REQUEST_DATA:
    error_code: '000000001'
    error_name: INVALID_REQUEST_DATA
    message:
      en_US: 'Invalid request contains the following errors: {}'
events: null
mappings:
  data: null
  header: null
  service: null
modules:
  app_project:
    features:
      new:
        header_mapping: app_project_headers
        functions:
        - data_mapping: new_app_project
          function_path: app_project.new_app_project
      sync:
        header_mapping: app_project_headers
        functions:
        - data_mapping: sync_app_project
          function_path: app_project.sync_app_project
      set_default:
        header_mapping: app_project_headers
        functions:
        - data_mapping: set_default_app_project
          function_path: app_project.set_default_app_project
  domain:
    features:
      add_model:
        functions:
        - data_mapping: add_domain_model
          function_path: domain.add_model
      add:
        functions:
        - data_mapping: add_domain
          function_path: domain.add_domain
      update:
        functions:
        - data_mapping: update_domain
          function_path: domain.update_domain
      add_role:
        functions:
        - data_mapping: add_domain_role
          function_path: domain.add_role
      add_model_property:
        functions:
        - data_mapping: add_domain_model_property
          function_path: domain.add_domain_model_property
